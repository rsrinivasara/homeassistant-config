## WARNING ##
# This file is automatically generated, any changes
# will be overwritten.

##################################################
################  COMMON ENTITIES  ###############
##################################################

###############  input_boolean:  #################
input_boolean:
  garagedoor_lock_notifications:
    name: garagedoor Lock Notifications
  garagedoor_dooraccess_notifications:
    name: garagedoor Door Notifications
  garagedoor_garageacess_notifications:
    name: garagedoor Garage Notifications
  garagedoor_reset_lock:
    name: garagedoor reset lock
  keymaster_garagedoor_autolock:
    name: "Auto Lock Enabled"
    icon: mdi:key-remove
  keymaster_garagedoor_retry:
    name: "Auto Lock Enabled"

###################  script:  ####################
script:
  keymaster_garagedoor_reset_lock:
    sequence:
      - service: script.keymaster_garagedoor_manual_notify
        data_template:
          title: "reset"
          message: "garagedoor"

  keymaster_garagedoor_reset_codeslot:
    mode: parallel
    fields:
      code_slot:
        description: The code slot to reset
        example: 1
    variables:
      # Constant used later to loop through day specific entities
      days: ["sun", "mon", "tue", "wed", "thu", "fri", "sat"]
    sequence:
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.enabled_garagedoor_{{ code_slot | string }}"
      - service: input_text.set_value
        data_template:
          entity_id: "input_text.garagedoor_name_{{ code_slot | string }}"
          value: ""
      - service: input_text.set_value
        data_template:
          entity_id: "input_text.garagedoor_pin_{{ code_slot | string }}"
          value: ""
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.notify_garagedoor_{{ code_slot | string }}"
      - service: input_number.set_value
        data_template:
          entity_id: "input_number.accesscount_garagedoor_{{ code_slot | string }}"
          value: "0"
      - service: input_datetime.set_datetime
        data_template:
          entity_id: "input_datetime.start_date_garagedoor_{{ code_slot | string }}"
          datetime: >-
            {{ now().strftime('%Y-%m-%d 00:00') }}
      - service: input_datetime.set_datetime
        data_template:
          entity_id: "input_datetime.end_date_garagedoor_{{ code_slot | string }}"
          datetime: >-
            {{ now().strftime('%Y-%m-%d 00:00') }}
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.daterange_garagedoor_{{ code_slot | string }}"
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.accesslimit_garagedoor_{{ code_slot | string }}"
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.reset_codeslot_garagedoor_{{ code_slot | string }}"
      # Loop through each day of the week and reset the entities related to each one
      - repeat:
          count: 7
          sequence:
            - service: input_datetime.set_datetime
              data_template:
                entity_id: "input_datetime.{{ days[repeat.index - 1] }}_start_date_garagedoor_{{ code_slot | string }}"
                time: "{{ now().replace(hour=00,minute=00,second=00).strftime('%H:%M:%S') }}"
            - service: input_datetime.set_datetime
              data_template:
                entity_id: "input_datetime.{{ days[repeat.index - 1] }}_end_date_garagedoor_{{ code_slot | string }}"
                time: "{{ now().replace(hour=00,minute=00,second=00).strftime('%H:%M:%S') }}"
            - service: input_boolean.turn_on
              data_template:
                entity_id: "input_boolean.{{ days[repeat.index - 1] }}_garagedoor_{{ code_slot | string }}"
            - service: input_boolean.turn_on
              data_template:
                entity_id: "input_boolean.{{ days[repeat.index - 1] }}_inc_garagedoor_{{ code_slot | string }}"

  keymaster_garagedoor_start_timer:
    sequence:
      - condition: state
        entity_id: input_boolean.keymaster_garagedoor_autolock
        state: "on"
      - condition: state
        entity_id: lock.garage_door_lock
        state: "unlocked"
      - service: timer.cancel
        entity_id: timer.keymaster_garagedoor_autolock
      - service: timer.start
        data_template: # if next_dusk happens sooner than next_dawn, then it's daylight
          entity_id: timer.keymaster_garagedoor_autolock
          duration: >
            {% if (((as_timestamp(states.sun.sun.attributes.next_dusk)) > (as_timestamp(states.sun.sun.attributes.next_dawn)))) %}
              {{ states('input_text.keymaster_garagedoor_autolock_door_time_night')}}
            {% else %}
              {{ states('input_text.keymaster_garagedoor_autolock_door_time_day')}}
            {% endif %}

  boltchecked_lock_garagedoor:
    sequence:
      - service: lock.lock
        data:
          entity_id: lock.garage_door_lock

  boltchecked_retry_garagedoor:
    sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.keymaster_garagedoor_retry
      - service: persistent_notification.create
        data_template:
          title: "Unable to lock garagedoor"
          message: >-
            {{ 'Unable to lock garagedoor as the sensor indicates the door is currently opened.  The operation will be automatically retried when the door is closed.'}}

###################  automation:  ####################
automation:
  - alias: keymaster_garagedoor Reset Code Slot
    id: keymaster_garagedoor Reset Code Slot
    trigger:
      entity_id: input_boolean.reset_codeslot_garagedoor_1,input_boolean.reset_codeslot_garagedoor_2,input_boolean.reset_codeslot_garagedoor_3,input_boolean.reset_codeslot_garagedoor_4,input_boolean.reset_codeslot_garagedoor_5,input_boolean.reset_codeslot_garagedoor_6,input_boolean.reset_codeslot_garagedoor_7,input_boolean.reset_codeslot_garagedoor_8,input_boolean.reset_codeslot_garagedoor_9,input_boolean.reset_codeslot_garagedoor_10
      platform: state
      to: "on"
    action:
      - service: script.keymaster_garagedoor_reset_codeslot
        data_template:
          code_slot: "{{ trigger.entity_id.split('_')[-1] }}"

  - alias: keymaster_garagedoor Lock Notifications
    id: keymaster_garagedoor Lock Notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: garagedoor
    condition:
      - condition: state
        entity_id: input_boolean.garagedoor_lock_notifications
        state: "on"
    action:
      - service: script.keymaster_garagedoor_manual_notify
        data_template:
          title: garagedoor
          message: "{{ trigger.event.data.action_text }} {% if trigger.event.data.code_slot > 0 %}({{ trigger.event.data.code_slot_name }}){% endif %}"

  - alias: keymaster_garagedoor User Notifications
    id: keymaster_garagedoor User Notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: garagedoor
    condition:
      - condition: template
        value_template: "{{ trigger.event.data.code_slot > 0 }}"
      - condition: template
        value_template: "{{ is_state('input_boolean.notify_garagedoor_' + trigger.event.data.code_slot | string, 'on') }}"
      - condition: state
        entity_id: input_boolean.garagedoor_lock_notifications
        state: "off"
    action:
      - service: script.keymaster_garagedoor_manual_notify
        data_template:
          title: garagedoor
          message: "{{ trigger.event.data.action_text }} ({{ trigger.event.data.code_slot_name }})"

  - alias: keymaster_garagedoor Door Open and Close
    id: keymaster_garagedoor Door Open and Close
    trigger:
      entity_id: binary_sensor.garage_door_sensor
      platform: state
    condition:
      - condition: state
        entity_id: "input_boolean.garagedoor_dooraccess_notifications"
        state: "on"
      - condition: template
        value_template: "{{ trigger.from_state.state in ('on', 'off') and trigger.to_state.state in ('on', 'off') }}"
    action:
      - service: script.keymaster_garagedoor_manual_notify
        data_template:
          title: garagedoor
          message: "{% if trigger.to_state.state == 'on' %}Door Opened{% else %}Door Closed{% endif %}"

  - alias: keymaster_garagedoor Changed Code
    id: keymaster_garagedoor Changed Code
    trigger:
      entity_id: input_text.garagedoor_pin_1,input_text.garagedoor_pin_2,input_text.garagedoor_pin_3,input_text.garagedoor_pin_4,input_text.garagedoor_pin_5,input_text.garagedoor_pin_6,input_text.garagedoor_pin_7,input_text.garagedoor_pin_8,input_text.garagedoor_pin_9,input_text.garagedoor_pin_10
      platform: state
    condition:
      - condition: template
        value_template: >-
          {{
            is_state('input_boolean.enabled_garagedoor_' + trigger.entity_id.split('_')[-1], 'on')
            and
            (trigger.from_state.state != trigger.to_state.state)
          }}
    action:
      - service: persistent_notification.create
        data_template:
          title: garagedoor LOCK MANAGER
          message: >-
            {{ 'You changed the PIN for garagedoor code slot ' + trigger.entity_id.split('_')[-1] + '. Please enable it in order to make it active.'}}
      - service: input_boolean.turn_off
        data_template:
          entity_id: >-
            {{ 'input_boolean.enabled_garagedoor_' + trigger.entity_id.split('_')[-1] }}

  - alias: keymaster_garagedoor Reset
    id: keymaster_garagedoor Reset
    trigger:
      entity_id: input_boolean.garagedoor_reset_lock
      platform: state
      from: "off"
      to: "on"
    action:
      - service: script.keymaster_garagedoor_reset_lock
      - service: input_boolean.turn_off
        entity_id: input_boolean.garagedoor_reset_lock

  - alias: keymaster_garagedoor Decrement Access Count
    id: keymaster_garagedoor Decrement Access Count
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: garagedoor
    condition:
      - condition: template
        # make sure decrementing access entries is enabled
        value_template: "{{ is_state('input_boolean.accesslimit_garagedoor_' + trigger.event.data.code_slot | string, 'on') }}"
      - condition: template
        # Check for Keypad Unlock code
        value_template: >-
          {{
            trigger.event.data.code_slot > 0
            and
            (trigger.event.data.action_code is undefined or trigger.event.data.action_code in (6, 19))
          }}
    action:
      - service: input_number.decrement
        data_template:
          entity_id: "{{ 'input_number.accesscount_garagedoor_' + trigger.event.data.code_slot | string }}"

  - alias: keymaster_garagedoor_locked
    id: keymaster_garagedoor_locked
    trigger:
      entity_id: lock.garage_door_lock
      platform: state
      to: locked
    action:
      - service: timer.cancel
        entity_id: timer.keymaster_garagedoor_autolock

  - alias: keymaster_turn_off_retry_garagedoor
    id: keymaster_turn_off_retry_garagedoor
    trigger:
      entity_id: lock.garage_door_lock
      platform: state
      to: locked
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_garagedoor_retry

  - alias: keymaster_retry_bolt_closed_garagedoor
    id: keymaster_retry_bolt_closed_garagedoor
    trigger:
      platform: state
      entity_id: binary_sensor.garage_door_sensor
      to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_garagedoor_retry
        state: "on" 
      - condition: state
        entity_id: input_boolean.keymaster_garagedoor_autolock
        state: "on"
    action:
      - service: persistent_notification.create
        data_template:
          title: "garagedoor is closed"
          message: >-
            {{ 'The garagedoor sensor indicates the door has been closed, re-attempting to lock.'}}
      - service: lock.lock
        entity_id: lock.boltchecked_garagedoor

  - alias: keymaster_garagedoor_opened
    id: keymaster_garagedoor_opened
    trigger:
      platform: state
      entity_id: binary_sensor.garage_door_sensor
      to: "on"
    action:
      - service: timer.start
        data_template:
          entity_id: timer.keymaster_garagedoor_autolock
          duration: >
            {% if (((as_timestamp(states.sun.sun.attributes.next_dusk)) > (as_timestamp(states.sun.sun.attributes.next_dawn)))) %}
              {{ states('input_text.keymaster_garagedoor_autolock_door_time_night')}}
            {% else %}
              {{ states('input_text.keymaster_garagedoor_autolock_door_time_day')}}
            {% endif %}

  - alias: keymaster_garagedoor_unlocked_start_autolock
    id: keymaster_garagedoor_unlocked_start_autolock
    trigger:
      entity_id: lock.garage_door_lock
      platform: state
      to: unlocked
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_garagedoor_autolock
        state: "on"
    action:
      - service: script.turn_on
        entity_id: script.keymaster_garagedoor_start_timer
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_garagedoor_retry

  - alias: keymaster_garagedoor_timer_finished
    id: keymaster_garagedoor_timer_finished
    condition:
      - condition: state
        entity_id: input_boolean.keymaster_garagedoor_autolock
        state: "on"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.keymaster_garagedoor_autolock
    action:
      - service: lock.lock
        entity_id: lock.boltchecked_garagedoor

  - alias: keymaster_garagedoor_timer_canceled
    id: keymaster_garagedoor_timer_canceled
    trigger:
      platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.keymaster_garagedoor_autolock
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_garagedoor_retry

  - alias: keymaster_garagedoor_disable_auto_lock
    id: keymaster_garagedoor_disable_auto_lock
    trigger:
      entity_id: input_boolean.keymaster_garagedoor_autolock
      platform: state
      to: "off"
    action:
      - service: timer.cancel
        entity_id:
          - timer.keymaster_garagedoor_autolock
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_garagedoor_retry

  - alias: keymaster_garagedoor_enable_auto_lock
    id: keymaster_garagedoor_enable_auto_lock
    trigger:
      entity_id: input_boolean.keymaster_garagedoor_autolock
      platform: state
      to: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.keymaster_garagedoor_retry
      - service: timer.cancel
        entity_id:
          - timer.keymaster_garagedoor_autolock
      - service: script.turn_on
        entity_id: script.keymaster_garagedoor_start_timer

###################  timer:  ####################
timer:
  keymaster_garagedoor_autolock:
    name: "Auto Lock Timer"

###################  lock:  ####################
lock:
  - platform: template
    name: boltchecked_garagedoor
    value_template: "{{ is_state('lock.garage_door_lock', 'locked') }}"
    lock:
      service: "{{ 'script.boltchecked_retry_garagedoor' if (is_state('binary_sensor.garage_door_sensor', 'on')) else 'script.boltchecked_lock_garagedoor' }}"
    unlock:
      service: lock.unlock
      data:
        entity_id: lock.garage_door_lock

###############  input_text:  #################
input_text:
  garagedoor_lockname:
    initial: garagedoor
    name: "Lock Name"

  keymaster_garagedoor_autolock_door_time_day:
    name: "Day Auto Lock HH:MM:SS"
    initial: "00:15:00"
  keymaster_garagedoor_autolock_door_time_night:
    name: "Night Auto Lock HH:MM:SS"
    initial: "00:05:00"
